name: CI
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  branch-naming-rules:
    name: Check branch name
    runs-on: ubuntu-latest
    steps:
      - uses: deepakputhraya/action-branch-name@master
        with:
          regex: '^(feature|bugfix|improvement|library|prerelease|release|hotfix|poc)\/[a-z0-9_.-]+$'
          allowed_prefixes: 'feature,bugfix,improvement,library,prerelease,release,hotfix,poc'
          ignore: main,dev
          min_length: 5
          max_length: 50

  check-style:
    name: Code style
    needs: [branch-naming-rules]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.19'
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          skip-cache: true
          skip-pkg-cache: true
          skip-build-cache: true

  unit-tests:
    name: Unit tests
    needs: [branch-naming-rules]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.19'
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Run test
        run:  go test $(go list ./... | grep -v /vendor/) -coverprofile=coverage.out -v
      - uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage.out

  e2e-tests:
    name: E2E tests
    needs: [unit-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.19'
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Run test app 
        run: |
          cd testapp/
          TESTAPP_ROOTNODE=12  go run main.go --config_path .

  sonarcloud:
    name: SonarCloud
    needs: [unit-tests, check-style]
    runs-on: ubuntu-latest
    steps:
      - name: Download line coverage report
        uses: actions/download-artifact@v3
        with:
          name: coverage
          path: coverage.out
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}